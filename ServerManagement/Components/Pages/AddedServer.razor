@page "/addedserver/{id:int}"

@inject NavigationManager navigationmanager;

<h3>AddedServer</h3>

@if(server is not null)
{
    <EditForm Model="server" FormName="formServer" OnValidSubmit="Submit">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <InputNumber @bind-Value=server.ServerId hidden></InputNumber>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">Name</label>
            </div>
        </div>
        <div class="col-6">
            <InputText @bind-Value="server.Name" class="form-control"></InputText>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">City</label>
            </div>
        </div>
        <div class="col-6">
            <InputText @bind-Value="server.City" class="form-control"></InputText>
        </div>
        <div class="row mb-3">
            <div class="col-2">
                <label class="col-form-label">IsOnline</label>
            </div>
        </div>
        <div class="col-6">
            <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
        </div>

        <br />

        <button type="submit" class="btn btn-primary">Update</button>
    </EditForm>
}
<a href="/servers" class="btn btn-primary">Close</a>


@code {
    [Parameter]
    public int Id { get; set; }

    [SupplyParameterFromForm(FormName ="formServer")] //zuerst gebe ich der Form die eingefüllten Daten, aber wiederum bei einem Update oder Bearbeitung der Daten füge ich das in das gleiche Objekt wieder rein, WAS MEGA SINN MACHT!!!!!
    private Server server { get; set; }
    protected override void OnParametersSet()
    {
        server ??= ServerRepository.GetServerById(Id); //die rechte Seite dieser Zeile wird nur ausgeführt wenn Server null ist,
                                                       //wenn man den Update Button klickt so wird die Seite wieder neugeladen und deswegen wird einfach das nicht geupdated sondern es fügt einfach wiederholt die daten rein in den server, die man eh schon ganz am anfang hatte
                                                       //das verhindert halt, dass nach dem Update button Klick die alten Daten reingeladen werden 
    }

    private async Task Submit()
    {
        if(server != null)
        {
            ServerRepository.Updateserver(server.ServerId, server);
        }

        navigationmanager.NavigateTo("/servers");
    }

}
